name: Test

permissions:
  contents: read
on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os.runner }}
    name: ${{ matrix.os.name }} / ${{ matrix.toolchain }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - runner: ubuntu-latest
            name: ubuntu
          - runner: windows-latest
            name: windows
          - runner: macos-latest
            name: macos
        toolchain:
          - stable
          - beta
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Arma 3 Tools
        if: startsWith(matrix.os.runner, 'windows')
        uses: arma-actions/arma3-tools@master
        with:
          toolsUrl: ${{ secrets.ARMA3_TOOLS_URL }}
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      # https://twitter.com/jonhoo/status/1571290371124260865
      - name: cargo test --locked
        run: cargo test --locked --all-features --all-targets

  coverage:
    name: ${{ matrix.os.name }} / stable / coverage
    runs-on: ${{ matrix.os.runner }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - runner: ubuntu-latest
            name: ubuntu
          - runner: windows-latest
            name: windows
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: Install Arma 3 Tools
        if: startsWith(matrix.os.runner, 'windows')
        uses: arma-actions/arma3-tools@master
        with:
          toolsUrl: ${{ secrets.ARMA3_TOOLS_URL }}
      - name: cargo llvm-cov
        run: cargo llvm-cov --locked --all-features --codecov --output-path codecov.json
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          files: codecov.json
          fail_ci_if_error: true

  coverage-mods:
    name: ${{ matrix.os.name }} / ${{ matrix.mod.repo }} / coverage
    runs-on: ${{ matrix.os.runner }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - runner: ubuntu-latest
            name: ubuntu
          - runner: windows-latest
            name: windows
        mod:
          - repo: acemod/ACE3
            commit: 864d2e9eeed7028ef5194caec7948566950ebbdc
          - repo: BourbonWarfare/POTATO
            commit: 902d4fd52af15143bb49bcd0dc5522af0ececf82
          - repo: ArmaForces/Mods
            commit: 6871517d4c2f720cea62b767eb7ec422bf712f51
          - repo: Theseus-Aegis/Mods
            commit: 445ec5fc71bbd01d57252be2794947c2bfe79988
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Checkout mod
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.mod.repo }}
          path: mod
          ref: ${{ matrix.mod.commit }}
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: Install Arma 3 Tools
        if: startsWith(matrix.os.runner, 'windows')
        uses: arma-actions/arma3-tools@master
        with:
          toolsUrl: ${{ secrets.ARMA3_TOOLS_URL }}
      - name: Build HEMTT
        run: |
          source <(cargo llvm-cov show-env --export-prefix)
          cargo llvm-cov clean --workspace
          cargo build
      - name: Build ${{ matrix.mod.repo }} (dev)
        run: |
          cd mod && ../target/debug/hemtt dev
      - name: Build ${{ matrix.mod.repo }} (build)
        run: |
          cd mod && ../target/debug/hemtt build
      - name: Build ${{ matrix.mod.repo }} (release)
        run: |
          cd mod && ../target/debug/hemtt release
      - name: cargo llvm-cov
        run: cargo llvm-cov report --codecov --output-path codecov.json
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          files: codecov.json
          fail_ci_if_error: true
